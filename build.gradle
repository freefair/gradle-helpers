buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.10.1"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"

        classpath "io.freefair.gradle:maven-plugin:4.0.1"
        classpath "io.freefair.gradle:lombok-plugin:4.0.1"
        classpath "io.freefair.gradle:git-plugin:4.0.1"
    }
}

plugins {
    id 'org.asciidoctor.jvm.convert' version '2.3.0'
}

apply plugin: 'io.freefair.git-version'
apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    stagingProfileId = '7e6204597a774f'
    username = findProperty('ossrhUser')
    password = findProperty('ossrhPass')
}

allprojects {
    repositories {
        mavenCentral()
    }

    group = "io.freefair.gradle"
    version = rootProject.version

    plugins.withId("java") {
        javadoc.options.links "https://docs.gradle.org/$gradle.gradleVersion/javadoc/"
        javadoc.failOnError = false

        sourceCompatibility = 1.8
        targetCompatibility = 1.8

        plugins.apply "jacoco"
        plugins.apply "io.freefair.lombok"
        plugins.apply "io.freefair.javadoc-links"

        jacocoTestReport.reports.xml.enabled = true
    }

    plugins.withId("com.gradle.plugin-publish") {
        pluginBundle {
            website = "https://docs.freefair.io/gradle-plugins/$version/reference/"
            vcsUrl = 'https://github.com/freefair/gradle-plugins'

            mavenCoordinates {
                groupId = project.group
            }
        }
    }

    plugins.withId("maven-publish") {
        publishing {
            publications.withType(MavenPublication) {
                pom {
                    url = 'https://github.com/freefair/gradle-plugins'
                    name = provider { project.description }
                    description = provider { project.description }
                    inceptionYear = '2016'
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://github.com/freefair/gradle-plugins/blob/master/LICENSE'
                        }
                    }
                    organization {
                        name = 'FreeFair'
                        url = 'http://joinfaces.org'
                    }
                    developers {
                        developer {
                            id = 'larsgrefer'
                            name = 'Lars Grefer'
                            email = 'github@larsgrefer.de'
                            timezone = 'Europe/Berlin'
                        }
                        developer {
                            id = 'frisch12'
                            name = 'Dennis Fricke'
                            email = 'dennis.fricke@freefair.io'
                            timezone = 'Europe/Berlin'
                        }
                    }
                    ciManagement {
                        system = 'Travis CI'
                        url = 'https://travis-ci.org/freefair/gradle-plugins/'
                    }
                    issueManagement {
                        system = 'Github'
                        url = 'https://github.com/freefair/gradle-plugins/issues'
                    }
                    scm {
                        connection = 'scm:git:https://github.com/freefair/gradle-plugins.git'
                        developerConnection = 'scm:git:git@github.com:freefair/gradle-plugins.git'
                        url = 'https://github.com/freefair/gradle-plugins/'
                    }
                }
            }
        }
    }
}

asciidoctor {
    baseDirFollowsSourceDir()

    attributes gradle_version: gradle.gradleVersion

    inputs.dir("src/docs/asciidoc")
}

apply plugin: "io.freefair.aggregate-javadoc"
apply plugin: "io.freefair.javadoc-links"

aggregateJavadoc.failOnError = false
aggregateJavadoc.options.links "https://docs.gradle.org/${gradle.gradleVersion}/javadoc/"

task docsZip(type: Zip) {
    group = 'build'
    archiveClassifier = 'docs'
    dependsOn asciidoctor

    into("api") {
        from aggregateJavadoc
    }
    into("reference") {
        from asciidoctor.outputDir
    }
}

task uploadDocs(type: io.freefair.gradle.plugins.okhttp.tasks.UploadFile) {
    dependsOn docsZip
    username = findProperty("freefairDocsUser")
    password = findProperty("freefairDocsPass")
    file = docsZip.archiveFile
    contentType = 'application/zip'
    url = "https://docs.freefair.io/api/$project.version?path=gradle-plugins"
}
